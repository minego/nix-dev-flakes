#!/usr/bin/env sh

# vaas-configure
#
# Load or prompt for developer specific options neededed for Vaas Development

VARS="DEVSTACK\nDOCKER_USERNAME\nDOCKER_TOKEN\nGLAB_TOKEN\n"

function usage() {
	echo "Usage: VAAS_HOME=<dev environment home dir> vaas-configure <cmd>"
	echo ""
	echo "	Commands:"
	echo "	prompt		- Ask the user for needed values"
	echo "	reset		- Ask the user if they want to clear previously set values"
	echo "	reset-force	- Clear previously set values without prompting"
	echo "	check		- Verify that all needed values are loaded"
	echo "	path		- Print to the path to the file that the options are cached in"
	echo "	dump		- Echo the currently loaded options"
	echo "	hook		- Load and echo previously configured options; suitable to be ran as:"
	echo "				eval \$\(vaas-configure hool\)"
	return 1
}

ORG_CMD="$0 $@"
function bt() {
	local i=0
	local line_no
	local function_name
	local file_name

	while caller $i;do
		((i++))
	done | while read line_no function_name file_name; do
		echo -e "\t$file_name:$line_no\t$function_name";
	done >&2
	echo "Original command: $ORG_CMD" >&2
}

function ask() {
	if [ -n "${!1}" ]; then
		echo "Keeping existing value for $1: ${!1}"
		return 0
	fi

	echo -en "$2"
	read "$1"
}

function askpass() {
	if [ -n "${!1}" ]; then
		echo "Keeping existing value for $1"
		return 0
	fi

	echo -en "$2"
	read -s "$1"
	echo
}

function prompt() {
	cat <<- EOF

		VaaS Developer Environment Configuration
		========================================

		Please enter the requested options, which are needed to configure your environment for VaaS development.

		The following links may be helpful if you are not sure how to obtain these values.

		https://venafi.atlassian.net/wiki/spaces/CT/pages/1883016018/VaaS+Devstacks
		https://venafi.atlassian.net/wiki/spaces/CT/pages/1883017678/Dockerhub+Setup

		========================================
	EOF

	# Sleep a moment to try to prevent direnv showing a
	# warning about a slow script while we are prompting.
	sleep 5; echo -en "\r                                                                                \r"

	ask		DEVSTACK		"What is your devstack number? (ie dev123): "
	ask		DOCKER_USERNAME	"Enter your docker hub username: "
	askpass	DOCKER_TOKEN	"Enter your docker access token: "
	askpass	GLAB_TOKEN		"Enter your private gitlab access token: "

	if ! check; then
		echo "ERROR: Not saving configured options, since they were not complete"
		return 1
	fi

	# Save the options
	echo "Saving configured options to: $VAAS_ENV"
	dump > "$VAAS_ENV"
}

function path() {
	echo "$VAAS_ENV"
}

function dump() {
	# Save the options do we don't have to prompt next time
	for name in `echo -en $VARS`; do
		echo "${name}=\"${!name}\""
	done

	return 0
}

function check() {
	RET=0

	for name in `echo -en $VARS`; do
		if [ ! -n "${!name}" ]; then
			echo "The ${name} value is not valid: \"${!name}\""
			RET=1
		fi
	done

	if [ $RET -ne 0 ]; then
		# Print a few blank lines to draw the line towards the errors
		echo ""
		echo ""
	fi

	return $RET
}

function hook() {
	if [ -f "${VAAS_ENV}" ]; then
		cat "${VAAS_ENV}" 2>/dev/null | sed 's/^/export /'
	fi
	return 0
}

function reset() {
	read -e -p "Reset cached vaas development configuration options? [y/N] " choice
	if [[ "$choice" == [Yy]* ]]; then
		resetforce
		return $?
	fi

	return 0
}

function resetforce() {
	if [ -f "${VAAS_ENV}" ]; then
		rm "$VAAS_ENV" 2>/dev/null
	fi

	if [ -f "${VAAS_ENV}" ]; then
		return 1
	fi
	return 0
}

# Main script
if [ ! -n "$VAAS_HOME" ]; then
	usage
	exit $?
fi

VAAS_ENV=$(dirname "${VAAS_HOME}")/.vaas_env
case $1 in
	reset)			reset		; exit $? ;;
	reset-force)	resetforce	; exit $? ;;
	prompt)			prompt		; exit $? ;;
	dump)			dump		; exit $? ;;
	path)			path		; exit $? ;;
	check)			check		; exit $? ;;
	hook)			hook		; exit $? ;;
	*)				usage		; exit $? ;;
esac

